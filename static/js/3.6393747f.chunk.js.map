{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/StubMessage.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Components/Tile/EmptyTile.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","replace","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","setTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","connectPlayer","window","addEventListener","on","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","e","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","OnlineStatus","onUpdateUserStatus","userId","user_id","user","UserStore","online","isUserOnline","getChatUserId","chatId","size","borderSize","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","chat","ChatStore","photo","src","getSrc","small","onUpdateChatPhoto","chat_id","store","getStore","loadChatContent","onUpdateChatTitle","t","letters","getChatLetters","handleSelect","onSelect","handleLoad","nextProps","nextState","showOnline","showSavedMessages","dialog","big","isDeletedPrivateChat","pointer","DeletedAccount","fontSize","isMeChat","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","prevChatId","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","a","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primary","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","photoAndVideo","audio","url","voiceNote","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","index","onClientUpdateChatMedia","onClientUpdateMediaTab","transition","isSmallWidth","scroll","filtersRef","item","photoAndVideoFilter","filterRef","offsetLeft","documentFilter","audioFilter","urlFilter","voiceNoteFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","ContextMenu","handleOpenMessage","messageId","openChat","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","contextMenu","handleCloseContextMenu","thumbnailSize","getSize","minithumbnail","openMedia","miniSrc","data","thumbSrc","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","SharedLink","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","offset","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedVoiceNote","i18n","date","sender_user_id","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","isBlurred","Boolean","SharedMediaContent","onUpdateMessageSend","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","items","slice","currentChatId","getItemTemplate","web_page","voice_note","loadMessageContents","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","openUser","getContentHeight","handleTabClick","list","divider","dividerRef","scrollTo","offsetTop","behavior","scrollHeight","offsetHeight","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedMedia","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","users","member","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","List","alignItems","wordWrap","toUpperCase","paddingLeft","Divider","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","isValidContent","insertByOrder","messageComparatorDesc","isValidMessage","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","from_message_id","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","reset","chatList","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","getViewInfoTitle","is_channel","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","isLastPinned","ApplicationStore","isSelected","getChatId","isUnread","isArchived","Unarchive","Group","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","nextContext","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","saveInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","log","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevScrollTop","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChatIds","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","isCreator","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","unpinMessage","canUnpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","reverse","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","video_note","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","controls","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","DayMeta","onClientUpdateLanguage","setMonth","getMonth","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","Meta","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageViews","views","onDateClick","isOutgoing","dateStr","dateHintStr","viewsStr","getViews","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","FrameCheck","RemoveCheck","EmptyTile","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","stretch","Video","smallPhoto","PHOTO_DISPLAY_SIZE","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","forward_info","inlineMeta","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","isMetaBubble","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","lastCompleted","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","getChatMedia","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","scale","MEDIA_VIEWER_VIDEO_MAX_SIZE","w","h","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","handlePhotoClick","onPrevious","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.6393747f.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('PopupEnabled') : t('PopupDisabled')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId, media } = update;\n        if (chatId !== this.props.chatId) return;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        let selectedIndex = -1;\n        if (photoAndVideo.length > 0) {\n            selectedIndex = 1;\n        } else if (document.length > 0) {\n            selectedIndex = 2;\n        } else if (audio.length > 0) {\n            selectedIndex = 3;\n        } else if (url.length > 0) {\n            selectedIndex = 4;\n        } else if (voiceNote.length > 0) {\n            selectedIndex = 5;\n        }\n\n        this.setState({\n            selectedIndex,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        });\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter;\n            left = photoAndVideoFilter.offsetLeft + 7;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter;\n            left = documentFilter.offsetLeft + 7;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter;\n            left = audioFilter.offsetLeft + 7;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter;\n            left = urlFilter.offsetLeft + 7;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter;\n            left = voiceNoteFilter.offsetLeft + 7;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left}px; width: ${item.scrollWidth - 14}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, photoAndVideo, document, audio, url, voiceNote } = this.state;\n\n        const tabsCount =\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0);\n\n        const hasSharedMedia = photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className='shared-media-tabs'>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description.text}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { throttle } from '../../../Utils/Common';\nimport './SharedMediaContent.css';\nimport MessageStore from '../../../Stores/MessageStore';\nimport { openMedia } from '../../../Utils/Message';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport FileStore from '../../../Stores/FileStore';\nimport { loadMessageContents } from '../../../Utils/File';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n\n            let source = [];\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                source = photoAndVideo.filter(x => SharedMediaContent.isValidPhotoAndVideoContent(x.content));\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                source = document.filter(x => SharedMediaContent.isValidDocumentContent(x.content));\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                source = audio.filter(x => SharedMediaContent.isValidAudioContent(x.content));\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                source = url.filter(x => SharedMediaContent.isValidUrlContent(x.content));\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                source = voiceNote.filter(x => SharedMediaContent.isValidVoiceNoteContent(x.content));\n                selectedIndex = 5;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                items: source.slice(0, 40),\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        // MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        // MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            }\n        }\n\n        let source = [];\n        if (selectedIndex === 1) {\n            source = photoAndVideo.filter(x => SharedMediaContent.isValidPhotoAndVideoContent(x.content));\n        } else if (selectedIndex === 2) {\n            source = document.filter(x => SharedMediaContent.isValidDocumentContent(x.content));\n        } else if (selectedIndex === 3) {\n            source = audio.filter(x => SharedMediaContent.isValidAudioContent(x.content));\n        } else if (selectedIndex === 4) {\n            source = url.filter(x => SharedMediaContent.isValidUrlContent(x.content));\n        } else if (selectedIndex === 5) {\n            source = voiceNote.filter(x => SharedMediaContent.isValidVoiceNoteContent(x.content));\n        }\n\n        this.setState({\n            selectedIndex,\n            items: source.slice(0, 40),\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, items);\n        }\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { photoAndVideo, document, audio, url, voiceNote } = this.state;\n\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        let source = [];\n        if (selectedIndex === 1) {\n            source = photoAndVideo.filter(x => SharedMediaContent.isValidPhotoAndVideoContent(x.content));\n        } else if (selectedIndex === 2) {\n            source = document.filter(x => SharedMediaContent.isValidDocumentContent(x.content));\n        } else if (selectedIndex === 3) {\n            source = audio.filter(x => SharedMediaContent.isValidAudioContent(x.content));\n        } else if (selectedIndex === 4) {\n            source = url.filter(x => SharedMediaContent.isValidUrlContent(x.content));\n        } else if (selectedIndex === 5) {\n            source = voiceNote.filter(x => SharedMediaContent.isValidVoiceNoteContent(x.content));\n        }\n\n        this.setState({\n            selectedIndex,\n            items: source.slice(0, 40)\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        let source = [];\n        let selectedIndex = -1;\n        if (photoAndVideo.length > 0) {\n            source = photoAndVideo.filter(x => SharedMediaContent.isValidPhotoAndVideoContent(x.content));\n            selectedIndex = 1;\n        } else if (document.length > 0) {\n            source = document.filter(x => SharedMediaContent.isValidDocumentContent(x.content));\n            selectedIndex = 2;\n        } else if (audio.length > 0) {\n            source = audio.filter(x => SharedMediaContent.isValidAudioContent(x.content));\n            selectedIndex = 3;\n        } else if (url.length > 0) {\n            source = url.filter(x => SharedMediaContent.isValidUrlContent(x.content));\n            selectedIndex = 4;\n        } else if (voiceNote.length > 0) {\n            source = voiceNote.filter(x => SharedMediaContent.isValidVoiceNoteContent(x.content));\n            selectedIndex = 5;\n        }\n\n        this.setState({\n            selectedIndex,\n            items: source.slice(0, 40),\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        });\n    };\n\n    getItemTemplate = (selectedIndex, message) => {\n        const { chat_id, id, content } = message;\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 1: {\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={() => openMedia(chat_id, id, false)}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { selectedIndex, items } = this.state;\n        if (!items || !items.length) {\n            return null;\n        }\n\n        return (\n            <div className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => this.getItemTemplate(selectedIndex, x))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n        this.dividerRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n    }\n\n    onClientUpdateMediaTab = update => {\n\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.chatDetailsListRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n\n        list.scrollTo({\n            top: divider.offsetTop,\n            behavior: 'smooth'\n        });\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className={classNames('chat-details-list', 'scrollbars-hidden')}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={t('Bio')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                            secondary={t('Username')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                                secondary={t('Phone')}\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item-rounded' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent chatId={chatId}/>\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            {/*<Divider />*/}\n                            {/*<List className='shared-media-list'>*/}\n                            {/*    {photoCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedPhotos}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <PhotoIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {photoCount === 1 ? '1 photo' : `${photoCount} photos`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {videoCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedVideos}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <VideocamIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {videoCount === 1 ? '1 video' : `${videoCount} videos`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {documentCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedDocuments}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <InsertDriveFileIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {documentCount === 1 ? '1 file' : `${documentCount} files`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {audioCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedAudios}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <HeadsetIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {urlCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedLinks}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <InsertLinkIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {voiceAndVideoNoteCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <MicIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {voiceAndVideoNoteCount === 1*/}\n                            {/*                            ? '1 voice message'*/}\n                            {/*                            : `${voiceAndVideoNoteCount} voice messages`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {groupInCommonCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenGroupInCommon}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <GroupIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {groupInCommonCount === 1*/}\n                            {/*                            ? '1 group in common'*/}\n                            {/*                            : `${groupInCommonCount} groups in common`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*</List>*/}\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_user_id } = last_message;\n        if (sender_user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        // console.trace('[media] setSelection')\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main;\n                left += isSmallWidth ? 0 : 7;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                left += main.scrollWidth;\n            }\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter;\n                    left += isSmallWidth ? 0 : 7;\n                    break;\n                } else {\n                    left += filter.scrollWidth;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left}px; width: ${item.scrollWidth - 14}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                <div\n                    ref={r => this.filterRef.set('chatListMain', r)}\n                    className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                    onMouseDown={this.handleMainClick}\n                    title={isSmallWidth ? t('FilterAllChats') : null}>\n                    {isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}\n                </div>\n                {filters.map(x => (\n                    <div\n                        key={x.id}\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\n                        title={isSmallWidth ? x.title : null}>\n                        {isSmallWidth ? getFirstLetter(x.title) : x.title}\n                    </div>))}\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList } = this.state;\n        if (!chats) return;\n\n        const { loading } = this;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (this.loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats, chatList } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[p] GETCHATS start', type, offsetOrder, offsetChatId);\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[p] GETCHATS stop', replace, type, result);\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext();\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.saveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        let request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        if (isSupergroup(chatId) && isCreator(chatId)) {\n            request = {\n                '@type': 'setChatMemberStatus',\n                chat_id: chatId,\n                user_id: UserStore.getMyId(),\n                status: {\n                    '@type': 'chatMemberStatusCreator',\n                    is_member: false\n                }\n            };\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './StubMessage.css';\n\nclass StubMessage extends React.Component {\n\n    render() {\n\n        return (\n            <div className='stub-message'>\n                {this.props.children}\n            </div>\n        );\n    }\n\n}\n\nStubMessage.propTypes = {};\n\nexport default StubMessage;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, views, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                date,\n                editDate,\n                views,\n                isOutgoing\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            editDate\n        });\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id, views } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            views\n        });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, views, isOutgoing } = this.state;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_user_id) {\n                tile = <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                <Meta\n                                    className={classNames('meta-text', {\n                                        'meta-bubble': isMetaBubble(chatId, messageId)\n                                    })}\n                                    chatId={chatId}\n                                    messageId={messageId}\n                                    date={date}\n                                    editDate={edit_date}\n                                    views={views}\n                                    onDateClick={this.handleDateClick}\n                                />\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={64}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport FilesDropTarget from './FilesDropTarget';\nimport StubMessage from '../Message/StubMessage';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.lastCompleted = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n\n            // load media\n            getChatMedia(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        // if (this.lastCompleted) return;\n\n        console.log('[p] getChatHistory', [fromMessageId]);\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n        console.log('[p] getChatHistory result', fromMessageId, result);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n                // this.lastCompleted = true;\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        // console.log('[p] onLoadPrevious', [this.loading, this.completed]);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                /// message id=5 prev\n                /// message id=6 current\n                /// message id=7 next\n                /// ...\n                /// message id=10\n\n                const prevMessage = i > 0 ? history[i - 1] : null;\n                const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                let m = null;\n                if (isServiceMessage(x)) {\n                    m = (\n                        <ServiceMessage\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                        />\n                    );\n                } else {\n                    const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                    const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                    const showTail = !nextMessage\n                        || isServiceMessage(nextMessage)\n                        || nextMessage.content['@type'] === 'messageSticker'\n                        || nextMessage.content['@type'] === 'messageVideoNote'\n                        || x.sender_user_id !== nextMessage.sender_user_id\n                        || x.is_outgoing !== nextMessage.is_outgoing\n                        || nextShowTitle;\n\n                    m = (\n                        // <StubMessage\n                        //     key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                        //     ref={el => this.itemsMap.set(i, el)}\n                        //     chatId={x.chat_id}\n                        //     messageId={x.id}\n                        //     sendingState={x.sending_state}\n                        //     showTitle={showTitle}\n                        //     showTail={showTail}\n                        //     showUnreadSeparator={separatorMessageId === x.id}\n                        //     showDate={showDate}\n                        // />\n\n                        <Message\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            sendingState={x.sending_state}\n                            showTitle={showTitle}\n                            showTail={showTail}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                            showDate={showDate}\n                        />\n                    );\n                }\n\n                return m;\n\n\n              });\n        // console.log('[p] messagesList.render');\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}